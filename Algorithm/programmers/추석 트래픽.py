# 코딩테스트 연습 > 2018 KAKAO BLIND RECRUITMENT > [1차] 추석트래픽
def solution(lines):
   
    # 끝점을 기준으로 정렬
    # 끝점이 구간시작점(어떤것의 끝점)보다 크면서 시작점이 구간끝보다 작은거
    timeline=[] # 응답완료 시간 기준으로 오름차순 정렬되있음
    
    for i in lines:
        _, a, b = i.split()
        end = list(map(float, a.split(':')))
        end = end[0]*3600+end[1]*60+end[2]
        interval = float(b[:-1])
        timeline.append((end-interval+0.001, end))
    maxcnt=0
    for i in range(len(timeline)):
        cnt=0
        for j in range(i, len(timeline)):
            if timeline[j][0]-0.0001<=timeline[i][1]+0.999:
                cnt+=1
            
        if maxcnt<cnt:
            maxcnt=cnt
    return maxcnt

print(solution([
"2016-09-15 20:59:57.421 0.351s",
"2016-09-15 20:59:58.233 1.181s",
"2016-09-15 20:59:58.299 0.8s",
"2016-09-15 20:59:58.688 1.041s",
"2016-09-15 20:59:59.591 1.412s",
"2016-09-15 21:00:00.464 1.466s",
"2016-09-15 21:00:00.741 1.581s",
"2016-09-15 21:00:00.748 2.31s",
"2016-09-15 21:00:00.966 0.381s",
"2016-09-15 21:00:02.066 2.62s"
]))

# 정확성  테스트
# 테스트 1 〉	통과 (0.05ms, 10.3MB)
# 테스트 2 〉	통과 (48.61ms, 10.4MB)
# 테스트 3 〉	통과 (57.27ms, 10.4MB)
# 테스트 4 〉	통과 (0.02ms, 10.3MB)
# 테스트 5 〉	통과 (1.26ms, 10.3MB)
# 테스트 6 〉	통과 (1.09ms, 10.2MB)
# 테스트 7 〉	통과 (52.71ms, 10.5MB)
# 테스트 8 〉	통과 (48.42ms, 10.4MB)
# 테스트 9 〉	통과 (1.09ms, 10.2MB)
# 테스트 10 〉	통과 (0.04ms, 10.2MB)
# 테스트 11 〉	통과 (0.05ms, 10.3MB)
# 테스트 12 〉	통과 (48.43ms, 10.5MB)
# 테스트 13 〉	통과 (1.05ms, 10.3MB)
# 테스트 14 〉	통과 (0.02ms, 10.2MB)
# 테스트 15 〉	통과 (0.02ms, 10.2MB)
# 테스트 16 〉	실패 (0.02ms, 10.1MB)
# 테스트 17 〉	통과 (0.02ms, 10.2MB)
# 테스트 18 〉	통과 (233.03ms, 10.5MB)
# 테스트 19 〉	통과 (205.08ms, 10.5MB)
# 테스트 20 〉	통과 (205.55ms, 10.6MB)
# 테스트 21 〉	통과 (0.01ms, 10.1MB)
# 테스트 22 〉	통과 (0.01ms, 10.2MB)